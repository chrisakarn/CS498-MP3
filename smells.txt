Ruth Dankwah
Chris Karn

Q1. Discuss with your partner what code smell this is and what refactoring you can apply to remove the repeated statements. 
	This code smell is duplicated code. We solved it by extracting the method and creating a function that can be called
	instead of repeating the code again and again.
Q2.

Q3. Do you think that this new 'updateAndTrim' method belongs to 'Nodes' class? Discuss with your partner what code smell this is and what refactoring could remove it. 
	This code smell is feature envy, meaning it belongs in a different class. This can be solved by moving the method to its appropriate class.

Q4. Discuss with your partner how to eliminate this repeated code.
	You can eliminate the repeated code by using the extract method; the inline method, placing calls for the new method in both places

Q5.

Q6. The duplicated code line is below. It was repeated multiple times throughout the code. To fix this repeated code, we used the extracted method. By using eclipse, we were able to just highlight the duplicated code, then used the refactor tool for this question.
 
      -----------------------------------------------------------------------------------------------------------------------
      project.getPublishersList().replaceBy(Collections.singleton(new ResultPublisher(Result.UNSTABLE)));
        FreeStyleBuild unstableBuild = project.scheduleBuild2(0).get();
   
      The refactored version of the above code became
     unstableRefact(project);
    --------------------------------------------------------------------------------------------------------------------------
